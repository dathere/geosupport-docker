FROM debian:stretch
LABEL maintainer "Matthew Lipper <mlipper@gmail.com>"
#
# BUILD:
#
#         $ docker build -t mlipper/geosupport-docker:<release>_<version>
#
# OPTIONAL:
#
#         -e DISTFILE=<file>        # Defaults to "gdelx_${GEOSUPPORT_RELEASE}.zip"
#                                   # in the current directory.
#
#         -e GEOSUPPORT_HOME=<path> # Defaults to /opt/geosupport
#
# USE:
#         Base image to install and configure Geosupport with sensible defaults:
#
#         This image does not declare a volume which is almost always
#         necessary for geosupport-docker to be useful at all. That is
#         because all this project does is allow one to have the Geosupport
#         libraries and data installed and (optionally) the environment configured.
#
#         With that in mind, consider adding the following to your Dockerfile which uses this as its base image:
#
#         FROM geoclient-docker-onbuild:latest
#         ...
#         # Source shell script to export Geosupport environment
#         CMD ["bash", "-c", ".", "/opt/geosupport/bin/initenv"]
#         ...
#         # After the above, declare volume for referencing with '--volumes-from...'
#         VOLUME ["$GEOSUPPORT_HOME"]
#
# EXAMPLE:
#
#         <my_project>/Dockerfile:
#
#         FROM mlipper/geosupport-docker-onbuild:latest
#
#         # Your stuff
#         ...
#
#         # Mandatory after you're completely done modifying the file system
#         # of your image. The volume location must be the same full
#         # directory path as $GEOSUPPORT_RELEASE
#         VOLUME ["/opt/geosupport"]
#
#         # Optional but the CMD is what sets up your ENV.
#         CMD ["bash", "-c", ".", "/opt/geosupport/bin/initenv"]
#         ENTRYPOINT ...
#
ARG GEOSUPPORT_RELEASE
ENV GEOSUPPORT_RELEASE ${GEOSUPPORT_RELEASE:-18a}

ARG GEOSUPPORT_VERSION
ENV GEOSUPPORT_VERSION ${GEOSUPPORT_VERSION:-18.1}

#
# The path of DISTFILE must be compatible with the use of the Docker
# COPY command.
#
# See: https://docs.docker.com/engine/reference/builder/#copy
#
ARG DISTFILE
ENV DISTFILE ${DISTFILE:-"gdelx_${GEOSUPPORT_RELEASE}.zip"}

ARG GEOSUPPORT_HOME
ENV GEOSUPPORT_HOME ${GEOSUPPORT_HOME:-/opt/geosupport}

ENV LANG C.UTF-8

LABEL gsrelease $GEOSUPPORT_RELEASE
LABEL gsversion $GEOSUPPORT_VERSION

RUN apt-get update && apt-get install -y --no-install-recommends \
    bash \
    unzip \
    && rm -rf /var/lib/apt/lists/*

WORKDIR $GEOSUPPORT_HOME
ENV PATH $GEOSUPPORT_HOME/bin:$PATH
# Trailing '/' is required!
ENV GEOFILES $GEOSUPPORT_HOME/fls/
ENV GS_LIBRARY_PATH $GEOSUPPORT_HOME/lib
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}${GS_LIBRARY_PATH}

COPY initenv $GEOSUPPORT_HOME/bin/initenv

RUN set -o errexit -o nounset \
  && sed -i "s|@GEOSUPPORT_HOME@|$GEOSUPPORT_HOME|g" $GEOSUPPORT_HOME/bin/initenv \
  && chmod 755 $GEOSUPPORT_HOME/bin/initenv \
  && printf 'Contents of Geosupport initialization file %s\n\n' "$GEOSUPPORT_HOME/bin/initenv" \
  && cat $GEOSUPPORT_HOME/bin/initenv

RUN echo "DISTFILE=$DISTFILE"
# DISTFILE must be an absolute path unless it is in the same folder as this file
ONBUILD COPY $DISTFILE /$DISTFILE

ONBUILD RUN set -o errexit -o nounset \
  && echo "Installing Geosupport" \
  && unzip -qj /$DISTFILE "**/bin/*" -d $GEOSUPPORT_HOME/bin \
  && unzip -qj /$DISTFILE "**/lib/*" -d $GEOSUPPORT_HOME/lib \
  && unzip -qj /$DISTFILE "**/fls/*" -d $GEOSUPPORT_HOME/fls \
  && ln -nfs $GEOSUPPORT_HOME/bin/c_client $GEOSUPPORT_HOME/bin/goat \
  && rm /$DISTFILE

# Run
ONBUILD RUN . $GEOSUPPORT_HOME/bin/initenv

#ONBUILD VOLUME ["/opt/geosupport"]
